{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nconst useSystem_Users = _ref => {\n  _s();\n  let {\n    server,\n    user,\n    password,\n    startingSesion\n  } = _ref;\n  console.log('RENDERING useSystem_Users');\n  const [value, setValue] = useState({\n    server: server,\n    user: user,\n    password: password,\n    startingSesion: startingSesion\n  });\n  let userData = undefined;\n  const manageCredentials = credentials => {\n    console.log('VAAAALVAAAALLL', credentials.startingSesion);\n    setValue({\n      ...value,\n      ['user']: credentials.user,\n      ['password']: credentials.password,\n      ['startingSesion']: credentials.startingSesion\n    });\n    console.log('value.startingSesion', value);\n  };\n\n  //Temp testing\n  //console.log(`User Length: ${value.user.length}\n  //Password Length: ${value.password.length}\n  //StartingSesion: ${value.startingSesion}`);\n\n  if (value.startingSesion) {\n    userData = callSystem_Users(value.server, value.user, value.password, value.startingSesion);\n  }\n\n  //console.log(`USER DATA: ${userData}`);\n\n  return [userData, manageCredentials];\n};\n_s(useSystem_Users, \"vVRiZryJBYfpZZclMNcPDtuI4MM=\");\nconst callSystem_Users = async (server, user, password, startingSesion) => {\n  let userData = undefined;\n  console.log('***********************************');\n  console.log('DENTRO DE callSystem_Users');\n  console.log(`SERVER: ${server}`);\n  console.log(`USER: ${user}`);\n  console.log(`PASSWORD: ${password}`);\n  console.log(`STARTINGSESION: ${startingSesion}`);\n  console.log('SALIENDO DE callSystem_Users');\n  console.log('***********************************');\n  if (user.length != 0 && password.length != 0 && startingSesion) {\n    const response = await fetch(`${server}/System_Users/${user}/${password}`, {\n      //headers: {\n      //'Content-Type': 'application/json'\n      //},\n      method: 'GET'\n    });\n    userData = await response.json();\n  }\n  return userData;\n};\nexport default useSystem_Users;","map":{"version":3,"names":["useState","useSystem_Users","server","user","password","startingSesion","console","log","value","setValue","userData","undefined","manageCredentials","credentials","callSystem_Users","length","response","fetch","method","json"],"sources":["/Users/jm/Documents/Workspace/React/Projects/IT_Inventory_PCUN_Frontend/src/api/useSystem_Users.js"],"sourcesContent":["import { useState } from 'react';\n\nconst useSystem_Users = ({ server, user, password, startingSesion }) => {\n    console.log('RENDERING useSystem_Users');\n    const [value, setValue] = useState({ server: server, user: user, password: password, startingSesion: startingSesion });\n    let userData = undefined;\n    const manageCredentials = (credentials) => {\n        console.log('VAAAALVAAAALLL',credentials.startingSesion);\n        setValue({\n            ...value,\n            ['user']: credentials.user,\n            ['password']: credentials.password,\n            ['startingSesion']: credentials.startingSesion\n        });\n        console.log('value.startingSesion',value);\n    }\n\n    //Temp testing\n    //console.log(`User Length: ${value.user.length}\n                 //Password Length: ${value.password.length}\n                 //StartingSesion: ${value.startingSesion}`);\n\n    if(value.startingSesion) {\n        userData = callSystem_Users(value.server, value.user, value.password, value.startingSesion);\n    }\n\n    //console.log(`USER DATA: ${userData}`);\n    \n    return [ userData, manageCredentials ];\n}\n\nconst callSystem_Users = async (server, user, password, startingSesion) => {\n    let userData = undefined;\n\n    console.log('***********************************');\n    console.log('DENTRO DE callSystem_Users');\n    console.log(`SERVER: ${server}`);\n    console.log(`USER: ${user}`);\n    console.log(`PASSWORD: ${password}`);\n    console.log(`STARTINGSESION: ${startingSesion}`);\n    console.log('SALIENDO DE callSystem_Users');\n    console.log('***********************************');\n\n    if(user.length != 0 && password.length != 0 && startingSesion) {\n        const response = await fetch(`${server}/System_Users/${user}/${password}`, {\n            //headers: {\n                //'Content-Type': 'application/json'\n            //},\n            method: 'GET' \n        });\n        userData = await response.json();\n    }\n\n    return userData;\n}\n\nexport default useSystem_Users;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,eAAe,GAAG,QAAgD;EAAA;EAAA,IAA/C;IAAEC,MAAM;IAAEC,IAAI;IAAEC,QAAQ;IAAEC;EAAe,CAAC;EAC/DC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC;IAAEE,MAAM,EAAEA,MAAM;IAAEC,IAAI,EAAEA,IAAI;IAAEC,QAAQ,EAAEA,QAAQ;IAAEC,cAAc,EAAEA;EAAe,CAAC,CAAC;EACtH,IAAIK,QAAQ,GAAGC,SAAS;EACxB,MAAMC,iBAAiB,GAAIC,WAAW,IAAK;IACvCP,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAACM,WAAW,CAACR,cAAc,CAAC;IACxDI,QAAQ,CAAC;MACL,GAAGD,KAAK;MACR,CAAC,MAAM,GAAGK,WAAW,CAACV,IAAI;MAC1B,CAAC,UAAU,GAAGU,WAAW,CAACT,QAAQ;MAClC,CAAC,gBAAgB,GAAGS,WAAW,CAACR;IACpC,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAACC,KAAK,CAAC;EAC7C,CAAC;;EAED;EACA;EACa;EACA;;EAEb,IAAGA,KAAK,CAACH,cAAc,EAAE;IACrBK,QAAQ,GAAGI,gBAAgB,CAACN,KAAK,CAACN,MAAM,EAAEM,KAAK,CAACL,IAAI,EAAEK,KAAK,CAACJ,QAAQ,EAAEI,KAAK,CAACH,cAAc,CAAC;EAC/F;;EAEA;;EAEA,OAAO,CAAEK,QAAQ,EAAEE,iBAAiB,CAAE;AAC1C,CAAC;AAAA,GA3BKX,eAAe;AA6BrB,MAAMa,gBAAgB,GAAG,OAAOZ,MAAM,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,cAAc,KAAK;EACvE,IAAIK,QAAQ,GAAGC,SAAS;EAExBL,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;EAClDD,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EACzCD,OAAO,CAACC,GAAG,CAAE,WAAUL,MAAO,EAAC,CAAC;EAChCI,OAAO,CAACC,GAAG,CAAE,SAAQJ,IAAK,EAAC,CAAC;EAC5BG,OAAO,CAACC,GAAG,CAAE,aAAYH,QAAS,EAAC,CAAC;EACpCE,OAAO,CAACC,GAAG,CAAE,mBAAkBF,cAAe,EAAC,CAAC;EAChDC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;EAC3CD,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;EAElD,IAAGJ,IAAI,CAACY,MAAM,IAAI,CAAC,IAAIX,QAAQ,CAACW,MAAM,IAAI,CAAC,IAAIV,cAAc,EAAE;IAC3D,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEf,MAAO,iBAAgBC,IAAK,IAAGC,QAAS,EAAC,EAAE;MACvE;MACI;MACJ;MACAc,MAAM,EAAE;IACZ,CAAC,CAAC;IACFR,QAAQ,GAAG,MAAMM,QAAQ,CAACG,IAAI,EAAE;EACpC;EAEA,OAAOT,QAAQ;AACnB,CAAC;AAED,eAAeT,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}